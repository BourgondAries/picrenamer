#! /bin/bash
############################################################
# Set up basic system
############################################################
function require {
	command -v "$1" 1>/dev/null 2 >& 1 || \
	{ echo >& 2 "I require $1, but it's not installed. Aborting."; exit 1; }
}

picture_viewer=eog
webm_player=vlc

$(require "$picture_viewer")
$(require "$webm_player")

wmctrl -r :ACTIVE: -N Picture\ Renamer
mkdir -p renamed/
mkdir -p skipped/
(
	while [ true ]; do
		wmctrl -a Picture\ Renamer
		sleep 0.2s
	done
) &
controller="$!"
trap "kill -9 $controller; exit" SIGINT

############################################################
# Main loop
############################################################
for file in *; do
	echo "$(ls | wc -l) elements left";
	if [ -d "$file" ]; then
		continue
	fi
	echo $file | grep -iP "(\.jpeg|\.png|\.jpg|\.bmp|\.gif|\.webm)$"
	if [ $? -eq 1 ]; then
		mkdir -p not_pictures
		mv -n "$file" not_pictures/
		continue
	fi
	extension="${file##*.}"
	if [ "$extension" = "webm" ]; then
		$webm_player "$file" 1 > /dev/null 2 >& 1 &
	else
		$picture_viewer "$file" 1 > /dev/null 2>&1 &
	fi
	subshell="$!"
	printf "Rename: "
	read new
	if [ "$new" == "" ]; then
		mv -n "$file" "skipped/$file"
	else
		mv -n "$file" "renamed/$new.$extension"
		# If the file could not be moved, rename it in the current folder
		if [ -f "$file" ]; then
			mv -n "$file" "$new.$extension"
		fi
	fi

	kill "$subshell" 1> /dev/null 2>& 1
done
kill "$controller"
############################################################
